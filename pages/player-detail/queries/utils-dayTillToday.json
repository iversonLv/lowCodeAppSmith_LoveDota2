{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "dayTillToday",
    "fullyQualifiedName": "utils.dayTillToday",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "player-detail",
    "collectionId": "player-detail_utils",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "(date) => {\n    const today = (new Date()).toString();\n    const todayParse = Date.parse(today);\n\n    const lastPlayedTillToday = todayParse - date * 1000;\n\n    const tillYears = lastPlayedTillToday / 1000 / 60  / 60 / 24 / 30 / 12;\n    const tillMonths = lastPlayedTillToday / 1000 / 60  / 60 / 24 / 30;\n    const tillDays = lastPlayedTillToday / 1000 / 60  / 60 / 24;\n    const tillHours = lastPlayedTillToday / 1000 / 60  / 60;\n    const tillMinutes = lastPlayedTillToday / 1000 / 60;\n\n    if (date === 0 ) {\n      return null;\n    }\n    if (tillYears >= 1 ) {\n      if (Math.floor(tillYears) > 1) {\n        return `${Math.floor(tillYears)} years ago`;\n      } else {\n        return 'a year ago';\n      }\n    } else if (tillMonths >= 1 ){\n      if (Math.floor(tillMonths) > 1) {\n        return `${Math.floor(tillMonths)} months ago`;\n      } else {\n        return 'a month ago';\n      }\n    } else if (tillDays >= 1) {\n      if (Math.floor(tillDays) > 1) {\n        return `${Math.floor(tillDays)} days ago`;\n      } else {\n        return 'a day ago';\n      }\n    } else if (tillHours >= 1) {\n      if (Math.floor(tillHours) > 1) {\n        return `${Math.floor(tillHours)} hours ago`;\n      } else {\n        return 'an hour ago';\n      }\n    } else if (tillMinutes  >= 1) {\n      if (Math.floor(tillMinutes) > 1) {\n        return `${Math.floor(tillMinutes)} minutes ago`;\n      } else {\n        return 'a minute ago';\n      }\n    }\n    return null;\n\t}",
      "jsArguments": [
        {
          "name": "date"
        }
      ],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "(date) => {\n    const today = (new Date()).toString();\n    const todayParse = Date.parse(today);\n\n    const lastPlayedTillToday = todayParse - date * 1000;\n\n    const tillYears = lastPlayedTillToday / 1000 / 60  / 60 / 24 / 30 / 12;\n    const tillMonths = lastPlayedTillToday / 1000 / 60  / 60 / 24 / 30;\n    const tillDays = lastPlayedTillToday / 1000 / 60  / 60 / 24;\n    const tillHours = lastPlayedTillToday / 1000 / 60  / 60;\n    const tillMinutes = lastPlayedTillToday / 1000 / 60;\n\n    if (date === 0 ) {\n      return null;\n    }\n    if (tillYears >= 1 ) {\n      if (Math.floor(tillYears) > 1) {\n        return `${Math.floor(tillYears)} years ago`;\n      } else {\n        return 'a year ago';\n      }\n    } else if (tillMonths >= 1 ){\n      if (Math.floor(tillMonths) > 1) {\n        return `${Math.floor(tillMonths)} months ago`;\n      } else {\n        return 'a month ago';\n      }\n    } else if (tillDays >= 1) {\n      if (Math.floor(tillDays) > 1) {\n        return `${Math.floor(tillDays)} days ago`;\n      } else {\n        return 'a day ago';\n      }\n    } else if (tillHours >= 1) {\n      if (Math.floor(tillHours) > 1) {\n        return `${Math.floor(tillHours)} hours ago`;\n      } else {\n        return 'an hour ago';\n      }\n    } else if (tillMinutes  >= 1) {\n      if (Math.floor(tillMinutes) > 1) {\n        return `${Math.floor(tillMinutes)} minutes ago`;\n      } else {\n        return 'a minute ago';\n      }\n    }\n    return null;\n\t}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "player-detail_utils.dayTillToday",
  "deleted": false,
  "gitSyncId": "625844870d3d384069c0e4c7_625a5cb90d3d384069c16486"
}