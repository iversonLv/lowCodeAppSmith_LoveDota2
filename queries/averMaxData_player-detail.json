{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "averMaxData",
    "fullyQualifiedName": "utils.averMaxData",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "player-detail",
    "collectionId": "player-detail_utils",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "(matches) => {\n\t\tconst winrate = (_.filter(matches, utils.isWin).length / 20 * 100).toFixed(2) + '%'\n\t\t\n\t\tconst kills = utils.averMax(matches, 'kills')\n\t\tconst most_kills_match = _.maxBy(matches, 'kills')\n\t\t\n\t\tconst deaths = utils.averMax(matches, 'deaths')\n\t\tconst most_deaths_match = _.maxBy(matches, 'deaths')\n\t\t\n\t\tconst assists = utils.averMax(matches, 'assists')\n\t\tconst most_assists_match = _.maxBy(matches, 'assists')\n\t\t\n\t\tconst gold_per_min = utils.averMax(matches, 'gold_per_min')\n\t\tconst most_gold_per_min_match = _.maxBy(matches, 'gold_per_min')\n\t\t\n\t\tconst xp_per_min = utils.averMax(matches, 'xp_per_min')\n\t\tconst most_xp_per_min_match = _.maxBy(matches, 'xp_per_min')\n\t\t\n\t\tconst last_hits = utils.averMax(matches, 'last_hits')\n\t\tconst most_last_hits_match = _.maxBy(matches, 'last_hits')\n\t\t\n\t\tconst hero_damage = utils.averMax(matches, 'hero_damage')\n\t\tconst most_hero_damage_match = _.maxBy(matches, 'hero_damage')\n\t\t\n\t\tconst hero_healing = utils.averMax(matches, 'hero_healing')\n\t\tconst most_hero_healing_match = _.maxBy(matches, 'hero_healing')\n\t\t\n\t\tconst tower_damage = utils.averMax(matches, 'tower_damage')\n\t\tconst most_tower_damage_match = _.maxBy(matches, 'tower_damage')\n\t\t\n\t\tconst duration = utils.durationFormat(utils.averMax(matches, 'duration'))\n\t\tconst most_duration_match = _.maxBy(matches, 'duration')\n\t\treturn {\n\t\t\twinrate,\n\t\t\tkills,\n\t\t\tdeaths,\n\t\t\tassists,\n\t\t\tgold_per_min,\n\t\t\txp_per_min,\n\t\t\tlast_hits,\n\t\t\thero_damage,\n\t\t\thero_healing,\n\t\t\ttower_damage,\n\t\t\tduration,\n\t\t\tmost_kills: most_kills_match.kills,\n\t\t\tmost_kills_hero_id: most_kills_match.hero_id,\n\t\t\tmost_deaths: most_deaths_match.deaths,\n\t\t\tmost_deaths_hero_id: most_deaths_match.hero_id,\n\t\t\tmost_assists: most_assists_match.assists,\n\t\t\tmost_assists_hero_id: most_assists_match.hero_id,\n\t\t\tmost_gold_per_min: utils.greaterNum(most_gold_per_min_match.gold_per_min, 1000, 'K'),\n\t\t\tmost_gold_per_min_hero_id: most_gold_per_min_match.hero_id,\n\t\t\tmost_xp_per_min: utils.greaterNum(most_xp_per_min_match.xp_per_min, 1000, 'K'),\n\t\t\tmost_xp_per_min_hero_id: most_xp_per_min_match.hero_id,\n\t\t\tmost_last_hits: utils.greaterNum(most_last_hits_match.last_hits, 1000, 'K'),\n\t\t\tmost_last_hits_hero_id: most_last_hits_match.hero_id,\n\t\t\tmost_hero_damage: utils.greaterNum(most_hero_damage_match.hero_damage, 1000, 'K'),\n\t\t\tmost_hero_damage_hero_id: most_hero_damage_match.hero_id,\n\t\t\tmost_hero_healing: utils.greaterNum(most_hero_healing_match.hero_healing, 1000, 'K'),\n\t\t\tmost_hero_healing_hero_id: most_hero_healing_match.hero_id,\n\t\t\tmost_tower_damage: utils.greaterNum(most_tower_damage_match.tower_damage, 1000, 'K'),\n\t\t\tmost_tower_damage_hero_id: most_tower_damage_match.hero_id,\n\t\t\tmost_duration: utils.durationFormat(most_duration_match.duration),\n\t\t\tmost_duration_hero_id: most_duration_match.hero_id,\n\t\t}\n\t}",
      "jsArguments": [
        {
          "name": "matches"
        }
      ],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "(matches) => {\n\t\tconst winrate = (_.filter(matches, utils.isWin).length / 20 * 100).toFixed(2) + '%'\n\t\t\n\t\tconst kills = utils.averMax(matches, 'kills')\n\t\tconst most_kills_match = _.maxBy(matches, 'kills')\n\t\t\n\t\tconst deaths = utils.averMax(matches, 'deaths')\n\t\tconst most_deaths_match = _.maxBy(matches, 'deaths')\n\t\t\n\t\tconst assists = utils.averMax(matches, 'assists')\n\t\tconst most_assists_match = _.maxBy(matches, 'assists')\n\t\t\n\t\tconst gold_per_min = utils.averMax(matches, 'gold_per_min')\n\t\tconst most_gold_per_min_match = _.maxBy(matches, 'gold_per_min')\n\t\t\n\t\tconst xp_per_min = utils.averMax(matches, 'xp_per_min')\n\t\tconst most_xp_per_min_match = _.maxBy(matches, 'xp_per_min')\n\t\t\n\t\tconst last_hits = utils.averMax(matches, 'last_hits')\n\t\tconst most_last_hits_match = _.maxBy(matches, 'last_hits')\n\t\t\n\t\tconst hero_damage = utils.averMax(matches, 'hero_damage')\n\t\tconst most_hero_damage_match = _.maxBy(matches, 'hero_damage')\n\t\t\n\t\tconst hero_healing = utils.averMax(matches, 'hero_healing')\n\t\tconst most_hero_healing_match = _.maxBy(matches, 'hero_healing')\n\t\t\n\t\tconst tower_damage = utils.averMax(matches, 'tower_damage')\n\t\tconst most_tower_damage_match = _.maxBy(matches, 'tower_damage')\n\t\t\n\t\tconst duration = utils.durationFormat(utils.averMax(matches, 'duration'))\n\t\tconst most_duration_match = _.maxBy(matches, 'duration')\n\t\treturn {\n\t\t\twinrate,\n\t\t\tkills,\n\t\t\tdeaths,\n\t\t\tassists,\n\t\t\tgold_per_min,\n\t\t\txp_per_min,\n\t\t\tlast_hits,\n\t\t\thero_damage,\n\t\t\thero_healing,\n\t\t\ttower_damage,\n\t\t\tduration,\n\t\t\tmost_kills: most_kills_match.kills,\n\t\t\tmost_kills_hero_id: most_kills_match.hero_id,\n\t\t\tmost_deaths: most_deaths_match.deaths,\n\t\t\tmost_deaths_hero_id: most_deaths_match.hero_id,\n\t\t\tmost_assists: most_assists_match.assists,\n\t\t\tmost_assists_hero_id: most_assists_match.hero_id,\n\t\t\tmost_gold_per_min: utils.greaterNum(most_gold_per_min_match.gold_per_min, 1000, 'K'),\n\t\t\tmost_gold_per_min_hero_id: most_gold_per_min_match.hero_id,\n\t\t\tmost_xp_per_min: utils.greaterNum(most_xp_per_min_match.xp_per_min, 1000, 'K'),\n\t\t\tmost_xp_per_min_hero_id: most_xp_per_min_match.hero_id,\n\t\t\tmost_last_hits: utils.greaterNum(most_last_hits_match.last_hits, 1000, 'K'),\n\t\t\tmost_last_hits_hero_id: most_last_hits_match.hero_id,\n\t\t\tmost_hero_damage: utils.greaterNum(most_hero_damage_match.hero_damage, 1000, 'K'),\n\t\t\tmost_hero_damage_hero_id: most_hero_damage_match.hero_id,\n\t\t\tmost_hero_healing: utils.greaterNum(most_hero_healing_match.hero_healing, 1000, 'K'),\n\t\t\tmost_hero_healing_hero_id: most_hero_healing_match.hero_id,\n\t\t\tmost_tower_damage: utils.greaterNum(most_tower_damage_match.tower_damage, 1000, 'K'),\n\t\t\tmost_tower_damage_hero_id: most_tower_damage_match.hero_id,\n\t\t\tmost_duration: utils.durationFormat(most_duration_match.duration),\n\t\t\tmost_duration_hero_id: most_duration_match.hero_id,\n\t\t}\n\t}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "player-detail_utils.averMaxData",
  "deleted": false,
  "gitSyncId": "625844870d3d384069c0e4c7_625afd1c0d3d384069c1862f"
}